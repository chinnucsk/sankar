// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from proto_template.proto

package com.example.tutorial;


public final class SchemaProtoTemplate
{

    public static final class Request
    {
        public static final com.example.tutorial.SchemaProtoTemplate.Request.MessageSchema WRITE =
            new com.example.tutorial.SchemaProtoTemplate.Request.MessageSchema();
        public static final com.example.tutorial.SchemaProtoTemplate.Request.BuilderSchema MERGE =
            new com.example.tutorial.SchemaProtoTemplate.Request.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.Request>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.Request message) throws java.io.IOException
            {
                if(message.hasReqName())
                    output.writeString(1, message.getReqName(), false);
                if(message.hasKb())
                    output.writeObject(2, message.getKb(), com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.WRITE, false);

            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.Request message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.Request.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.Request.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.Request> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.Request.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.Request.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.Request.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.Request message) throws java.io.IOException {}
            public com.example.tutorial.ProtoTemplate.Request newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.Request.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.Request.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setReqName(input.readString());
                            break;
                        case 2:
                            builder.setKb(input.mergeObject(com.example.tutorial.ProtoTemplate.KnowledgeBase.newBuilder(), com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.Request.Builder builder)
            {
                return builder.isInitialized();
            }
            public com.example.tutorial.ProtoTemplate.Request.Builder newMessage()
            {
                return com.example.tutorial.ProtoTemplate.Request.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.Request.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.Request.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.Request.Builder> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.Request.Builder.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.Request.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.Request.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.Request.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            return java.lang.String.valueOf(number);
        }
        public static int getFieldNumber(java.lang.String name)
        {
            return java.lang.Integer.parseInt(name);
        }

    }

    public static final class Response
    {
        public static final com.example.tutorial.SchemaProtoTemplate.Response.MessageSchema WRITE =
            new com.example.tutorial.SchemaProtoTemplate.Response.MessageSchema();
        public static final com.example.tutorial.SchemaProtoTemplate.Response.BuilderSchema MERGE =
            new com.example.tutorial.SchemaProtoTemplate.Response.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.Response>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.Response message) throws java.io.IOException
            {
                if(message.hasKb())
                    output.writeObject(1, message.getKb(), com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.WRITE, false);

                if(message.hasCs())
                    output.writeObject(2, message.getCs(), com.example.tutorial.SchemaProtoTemplate.ClientState.WRITE, false);

            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.Response message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.Response.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.Response.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.Response> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.Response.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.Response.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.Response.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.Response message) throws java.io.IOException {}
            public com.example.tutorial.ProtoTemplate.Response newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.Response.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.Response.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setKb(input.mergeObject(com.example.tutorial.ProtoTemplate.KnowledgeBase.newBuilder(), com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.MERGE));

                            break;
                        case 2:
                            builder.setCs(input.mergeObject(com.example.tutorial.ProtoTemplate.ClientState.newBuilder(), com.example.tutorial.SchemaProtoTemplate.ClientState.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.Response.Builder builder)
            {
                return builder.isInitialized();
            }
            public com.example.tutorial.ProtoTemplate.Response.Builder newMessage()
            {
                return com.example.tutorial.ProtoTemplate.Response.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.Response.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.Response.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.Response.Builder> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.Response.Builder.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.Response.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.Response.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.Response.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            return java.lang.String.valueOf(number);
        }
        public static int getFieldNumber(java.lang.String name)
        {
            return java.lang.Integer.parseInt(name);
        }

    }

    public static final class KnowledgeBase
    {
        public static final com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.MessageSchema WRITE =
            new com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.MessageSchema();
        public static final com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.BuilderSchema MERGE =
            new com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.KnowledgeBase>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.KnowledgeBase message) throws java.io.IOException
            {
                for(com.example.tutorial.ProtoTemplate.Node nodes : message.getNodesList())
                    output.writeObject(1, nodes, com.example.tutorial.SchemaProtoTemplate.Node.WRITE, true);

            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.KnowledgeBase message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.KnowledgeBase> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.KnowledgeBase.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.KnowledgeBase.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.KnowledgeBase.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.KnowledgeBase message) throws java.io.IOException {}
            public com.example.tutorial.ProtoTemplate.KnowledgeBase newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.KnowledgeBase.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.KnowledgeBase.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addNodes(input.mergeObject(com.example.tutorial.ProtoTemplate.Node.newBuilder(), com.example.tutorial.SchemaProtoTemplate.Node.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.KnowledgeBase.Builder builder)
            {
                return builder.isInitialized();
            }
            public com.example.tutorial.ProtoTemplate.KnowledgeBase.Builder newMessage()
            {
                return com.example.tutorial.ProtoTemplate.KnowledgeBase.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.KnowledgeBase.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.KnowledgeBase.Builder> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.KnowledgeBase.Builder.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.KnowledgeBase.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.KnowledgeBase.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.KnowledgeBase.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            return java.lang.String.valueOf(number);
        }
        public static int getFieldNumber(java.lang.String name)
        {
            return java.lang.Integer.parseInt(name);
        }

    }

    public static final class ClientState
    {
        public static final com.example.tutorial.SchemaProtoTemplate.ClientState.MessageSchema WRITE =
            new com.example.tutorial.SchemaProtoTemplate.ClientState.MessageSchema();
        public static final com.example.tutorial.SchemaProtoTemplate.ClientState.BuilderSchema MERGE =
            new com.example.tutorial.SchemaProtoTemplate.ClientState.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.ClientState>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.ClientState message) throws java.io.IOException
            {
                for(String action : message.getActionList())
                    output.writeString(1, action, true);
            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.ClientState message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.ClientState.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.ClientState.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.ClientState> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.ClientState.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.ClientState.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.ClientState.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.ClientState message) throws java.io.IOException {}
            public com.example.tutorial.ProtoTemplate.ClientState newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.ClientState.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.ClientState.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addAction(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.ClientState.Builder builder)
            {
                return builder.isInitialized();
            }
            public com.example.tutorial.ProtoTemplate.ClientState.Builder newMessage()
            {
                return com.example.tutorial.ProtoTemplate.ClientState.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.ClientState.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.ClientState.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.ClientState.Builder> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.ClientState.Builder.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.ClientState.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.ClientState.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.ClientState.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            return java.lang.String.valueOf(number);
        }
        public static int getFieldNumber(java.lang.String name)
        {
            return java.lang.Integer.parseInt(name);
        }

    }

    public static final class Node
    {
        public static final com.example.tutorial.SchemaProtoTemplate.Node.MessageSchema WRITE =
            new com.example.tutorial.SchemaProtoTemplate.Node.MessageSchema();
        public static final com.example.tutorial.SchemaProtoTemplate.Node.BuilderSchema MERGE =
            new com.example.tutorial.SchemaProtoTemplate.Node.BuilderSchema();
        
        public static class MessageSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.Node>
        {
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.Node message) throws java.io.IOException
            {
                if(message.hasNodeId())
                    output.writeString(1, message.getNodeId(), false);
                if(message.hasCpu())
                    output.writeInt32(2, message.getCpu(), false);
                if(message.hasHeap())
                    output.writeInt32(3, message.getHeap(), false);
            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.Node message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.Node.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.Node.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.Node> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.Node.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.Node.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.Node.class.getName();
            }
            //unused
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.Node message) throws java.io.IOException {}
            public com.example.tutorial.ProtoTemplate.Node newMessage() { return null; }
        }
        public static class BuilderSchema implements com.dyuproject.protostuff.Schema<com.example.tutorial.ProtoTemplate.Node.Builder>
        {
            public void mergeFrom(com.dyuproject.protostuff.Input input, com.example.tutorial.ProtoTemplate.Node.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setNodeId(input.readString());
                            break;
                        case 2:
                            builder.setCpu(input.readInt32());
                            break;
                        case 3:
                            builder.setHeap(input.readInt32());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(com.example.tutorial.ProtoTemplate.Node.Builder builder)
            {
                return builder.isInitialized();
            }
            public com.example.tutorial.ProtoTemplate.Node.Builder newMessage()
            {
                return com.example.tutorial.ProtoTemplate.Node.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return com.example.tutorial.SchemaProtoTemplate.Node.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return com.example.tutorial.SchemaProtoTemplate.Node.getFieldNumber(name);
            }
            public java.lang.Class<com.example.tutorial.ProtoTemplate.Node.Builder> typeClass()
            {
                return com.example.tutorial.ProtoTemplate.Node.Builder.class;
            }
            public java.lang.String messageName()
            {
                return com.example.tutorial.ProtoTemplate.Node.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return com.example.tutorial.ProtoTemplate.Node.class.getName();
            }
            //unused
            public void writeTo(com.dyuproject.protostuff.Output output, com.example.tutorial.ProtoTemplate.Node.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            return java.lang.String.valueOf(number);
        }
        public static int getFieldNumber(java.lang.String name)
        {
            return java.lang.Integer.parseInt(name);
        }

    }

}
